---
resources:
  people:
    provider: socialdb
    table:
      columns:
        id:
          type: integer
          autoincrement: true
        first_name:
          type: varchar
          size: 1024
        last_name:
          type: varchar
          size: 1024
  
  friends:
    provider: socialdb
    table:
      columns:
        subject_id:
          type: integer
        friend_id:
          type: integer

  people_friends:
    view:
      query: select p1.id as subject_id,
                    p1.first_name as subject_first_name,
                    p1.last_name  as subject_last_name,
                    p2.id as friend_id,
                    p2.first_name as friend_first_name,
                    p2.last_name  as friend_last_name
               from people p1, people p2, friends f
              where f.subject_id = p1.id
                and f.friend_id = p2.id

define:
  min_date: 2000-01-01
  typical_people:
    - [1, "Amy", "Person"]
    - [2, "Bobby", "Tables"]
    - [3, "Cindy", "Acquaintance"]

tests:
  - with-resources:
      people: typical_people
      friends:
        - [1, 2]
        - [2, 3]
        - [3, 2]

    run:
      - dml: INSERT INTO {{friends}}
             SELECT friend_id, subject_id
              FROM {{friends}} f
             WHERE NOT EXISTS (SELECT 1 FROM {{friends}} f2
                                WHERE f.friend_id = f2.subject_id
                                  AND f.subject_id = f2.friend_id)

    assertions:
      - query: SELECT friend_id, subject_id, COUNT(*)
                 FROM {{friends}}
                GROUP BY friend_id, subject_id
                ORDER BY friend, subject_id
        equals:
          - [1, 2, 1]
          - [2, 1, 1]
          - [2, 3, 1]
          - [3, 2, 1]


